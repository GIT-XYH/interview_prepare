RDD的全称为Resilient Distributed Dataset，是一个弹性、可复原的分布式数据集，
    是Spark中最基本的抽象，是一个不可变的、有多个分区的、可以并行计算的集合。
    RDD中并不装真正要计算的数据，而装的是描述信息，描述以后从哪里读取数据，调用了用什么方法，传入了什么函数，以及依赖关系等。

6.2RDD的特点
有一些列连续的分区：分区编号从0开始，分区的数量决定了对应阶段Task的并行度
有一个函数作用在每个输入切片上: 每一个分区都会生成一个Task，对该分区的数据进行计算，这个函数就是具体的计算逻辑
RDD和RDD之间存在一些列依赖关系：RDD调用Transformation后会生成一个新的RDD，子RDD会记录父RDD的依赖关系，包括宽依赖（有shuffle）和窄依赖（没有shuffle）
（可选的）K-V的RDD在Shuffle会有分区器，默认使用HashPartitioner
（可选的）如果从HDFS中读取数据，会有一个最优位置：spark在调度任务之前会读取NameNode的元数据信息，获取数据的位置，移动计算而不是移动数据，这样可以提高计算效率。


transformation 算子
1. 单 value:
    （1）map
    （2）mapPartitions
    （3）mapPartitionsWithIndex
    （4）flatMap
    （5）glom
    （6）groupBy
    （7）filter
    （8）sample
    （9）distinct
    （10）coalesce
    （11）repartition
    （12）sortBy
    （13）pipe

2. 双 value:
    （1）intersection
    （2）union
    （3）subtract
    （4）zip

3. k-v:
    （1）partitionBy
    （2）reduceByKey
    （3）groupByKey
    （4）aggregateByKey
    （5）foldByKey
    （6）combineByKey
    （7）sortByKey
    （8）mapValues
    （9）join
    （10）cogroup


action 算子:
    （1）reduce
    （2）collect
    （3）count
    （4）first
    （5）take
    （6）takeOrdered
    （7）aggregate
    （8）fold
    （9）countByKey
    （10）save
    （11）foreach