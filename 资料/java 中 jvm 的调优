JVM调优目标：使用较小的内存占用来获得较高的吞吐量或者较低的延迟。
内存占用：程序正常运行需要的内存大小。
延迟：由于垃圾收集而引起的程序停顿时间。
吞吐量：用户程序运行时间占用户程序和垃圾收集占用总时间的比值。

调优可以依赖、参考的数据有系统运行日志、堆栈错误信息、gc日志、线程快照、堆转储快照等。

调优工具: jps 查看虚拟机的进程

java 虚拟机的主要分区:
    方法区:
        方法区主要用来存储已被虚拟机加载的类的信息、常量、静态变量和即时编译器编译后的代码等数据。
        该区域是被线程共享的
    栈
        用于存储局部变量表、操作数栈、动态链接和方法出口等信息, 虚拟机栈是线程私有的，它的生命周期与线程相同
    堆
        java堆是所有线程所共享的一块内存，在虚拟机启动时创建，几乎所有的对象实例都在这里创建，因此该区域经常发生垃圾回收操作。

java类加载的过程
    加载->验证->解析->初始化

java 垃圾回收方法:
    引用计数法, 标记清除法, 标记压缩法等等

类加载器:
    实现通过类的权限定名获取该类的二进制字节流的代码块叫做类加载器。
    四种类加载器:
    1> 启动类加载器
    2> 扩展类加载器
    3> 系统类加载器
    4> 用户自定义类加载器

深拷贝和浅拷贝:
    浅拷贝：对基本数据类型进行值传递，对引用数据类型进行引用传递般的拷贝，此为浅拷贝。(指向同一个对象, 更改后原位置改变)
    深拷贝：对基本数据类型进行值传递，对引用数据类型，创建一个新的对象，并复制其内容，此为深拷贝。