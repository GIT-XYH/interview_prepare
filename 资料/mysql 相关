1. innoDB引擎
    innoDB引擎是事务型数据库的首选引擎, 支持 acid, 其他存储引擎都是非事务安全表, 他还支持行锁定和外键
2. myISAM引擎
MyISAM基于ISAM存储引擎，并对其进行扩展。它是在Web、数据仓储和其他应用环境下最常使用的存储引擎之一。
MyISAM拥有较高的插入、查询速度，但不支持事务，不支持外键。

myISAM和 InnoDB 的区别:
 对比项                        myISAM                                        InnoDB
 外键                         不支持                                         支持

 事务                         不支持                                         支持

 行表锁                  表锁，即使操作一条记录也                      行锁,操作时只锁某一行，不对其它行有影响，
                        会锁住整个表，不适合高并发的操作               适合高并发的操作

 缓存                   只缓存索引，不缓存真实数据                     不仅缓存索引还要缓存真实数据，对内存要求较高，
                                                                   而且内存大小对性能有决定性的影响



 b-树和 b+树
    1) B-树的关键字、索引和记录是放在一起的， B+树的非叶子节点中只有关键字和指向下一个节点的索引，记录只放在叶子节点中。
    2) 在B-树中，越靠近根节点的记录查找时间越快，只要找到关键字即可确定记录的存在；而B+树中每个记录的查找时间基本是一样的，
        都需要从根节点走到叶子节点，而且在叶子节点中还要再比较关键字

事务:MySQL 事务主要用于处理操作量大，复杂度高的数据。比如说，在人员管理系统中，你删除一个人员，你既需要删除人员的基本资料，
    也要删除和该人员相关的信息，如信箱，文章等等，这样，这些数据库操作语句就构成一个事务！

事务四要素:(ACID)
1> 原子性
    所有操作要么全部完成, 要么全部不完成, 不可分割
2> 一致性
    事务开始前和结束后, 数据库的完整性约束没有被破坏(转钱的例子)
3> 隔离性
    同一时间，只允许一个事务请求同一数据，不同的事务之间彼此没有任何干扰。(同一时间只能一个人取钱)
4> 持久性
    事务完成后, 事务对数据库的所有更新将被保存到数据库, 不能回滚

事务并发问题:
    脏读: 事务A读取了事务B更新的数据，然后B回滚操作，那么A读取到的数据是脏数据
    不可重复读：事务 A 多次读取同一数据，事务 B 在事务A多次读取的过程中，对数据作了更新并提交，导致事务A多次读取同一数据时，结果 不一致
    幻读：系统管理员A将数据库中所有学生的成绩从具体分数改为ABCDE等级，但是系统管理员B就在这个时候插入了一条具体分数的记录，
        当系统管理员A改结束后发现还有一条记录没有改过来，就好像发生了幻觉一样，这就叫幻读。

事务的隔离级别:
    事务隔离级别						脏读		不可重复读		幻读
    读未提交（read-uncommitted）		是			是				是
    不可重复读（read-committed）		否			是				是
    可重复读（repeatable-read）		否			否				是
    串行化（serializable）			否			否				否